{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.9"},"colab":{"provenance":[]}},"cells":[{"cell_type":"markdown","metadata":{"id":"CiTNl-y8KS4f"},"source":["# Wrkspot-Commit-Analyzer"]},{"cell_type":"markdown","metadata":{"id":"aN_Hjmo1b0bI"},"source":[]},{"cell_type":"code","metadata":{"scrolled":false,"id":"4bEKC5SiKS4h","executionInfo":{"status":"ok","timestamp":1670739927481,"user_tz":-330,"elapsed":516,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}}},"source":["import requests\n","import json\n","import dateutil.parser\n","from pprint import pprint\n","import pandas as pd\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","\n","username = \"sathishkumar31\"\n","password = \"ATBBJQ2NAhcL5TT7U3Bu5v2rFDvt77971F32\"\n","baseUrl = \"https://bitbucket.org/api/2.0\"\n","\n","startDateStr = '2022-12-01'\n","endDateStr = '2022-12-10'\n","\n","startDate = dateutil.parser.parse(startDateStr + 'T00:00:00+05:30')\n","endDate = dateutil.parser.parse(endDateStr + 'T23:59:59+05:30')"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"TtCy6rriKS4m","executionInfo":{"status":"ok","timestamp":1670739930618,"user_tz":-330,"elapsed":2372,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}}},"source":["def get_repos():\n","    url = \"{base}/repositories/TeamWrkSpot?pagelen=100\".format(base=baseUrl)\n","    repos = []\n","    while True:\n","        response = requests.get(url, auth=(username, password)).json()\n","        for repo in response['values']:\n","            repos.append(repo['slug'])\n","        if 'next' not in response:\n","            break\n","        url = response['next']\n","    return repos\n","repos = get_repos()"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"scrolled":false,"id":"gfdmxFG2KS4p","executionInfo":{"status":"ok","timestamp":1670739930618,"user_tz":-330,"elapsed":4,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}}},"source":["def get_commits_for_repo(repo_slug):\n","    url = \"{base}/repositories/TeamWrkSpot/{repo_slug}/commits?pagelen=100\".format(base=baseUrl, repo_slug=repo_slug)\n","    commits = []\n","    while True:\n","        response = requests.get(url, auth=(username, password)).json()\n","        for commit in response['values']:\n","            commit_date = dateutil.parser.parse(commit['date'])\n","            commits.append({\n","                'name' : commit['author']['raw'],\n","                'date' : commit_date,\n","                'repo' : repo_slug\n","            })\n","        if 'next' not in response or commit_date < startDate:\n","            break\n","        url = response['next']\n","    return commits"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"6iW-U1NsKS4t","colab":{"base_uri":"https://localhost:8080/"},"outputId":"ac977ecb-68cd-422a-a40c-7939c62800db","executionInfo":{"status":"ok","timestamp":1670740154378,"user_tz":-330,"elapsed":27688,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}}},"source":["print(\"Total Repos Found: %d\" % len(repos))\n","repo_serial = 1\n","print(\"Fetching commits for all repos...\")\n","commits = []\n","for repo in repos:\n","    print(\"%d of %d - %s\" % (repo_serial, len(repos), repo))\n","    temp_commits = get_commits_for_repo(repo)\n","    commits.extend(temp_commits)\n","    repo_serial += 1\n","commits_df = pd.DataFrame(commits)\n","commits_df = commits_df[(commits_df['date'] >= startDate) & (commits_df['date'] <= endDate)]\n","commits_df['day'] = pd.to_datetime(commits_df['date']).apply(lambda x: x.date())"],"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Total Repos Found: 139\n","Fetching commits for all repos...\n","1 of 139 - virtual-deployment\n","2 of 139 - timecard\n","3 of 139 - wrkspot-notification\n","4 of 139 - security\n","5 of 139 - wrkspot-iot\n","6 of 139 - wrkspot-android\n","7 of 139 - wrkspot-ios\n","8 of 139 - wrkspot-backend\n","9 of 139 - chat-gateway\n","10 of 139 - housekeeping\n","11 of 139 - cloud-config\n","12 of 139 - workorder-v2\n","13 of 139 - accrual\n","14 of 139 - quickbook-integration\n","15 of 139 - payroll\n","16 of 139 - scheduler-v2\n","17 of 139 - timesheet-v2\n","18 of 139 - scheduler-v3\n","19 of 139 - wrkspot-onboard\n","20 of 139 - alert-engine\n","21 of 139 - wrkspot-chat\n","22 of 139 - dashboard-manager\n","23 of 139 - android-virtual-deployment\n","24 of 139 - scheduler-dashboard\n","25 of 139 - report-engine\n","26 of 139 - dashboard-analytics\n","27 of 139 - inspection\n","28 of 139 - analytics-backend\n","29 of 139 - event-management\n","30 of 139 - quickbook-desktop\n","31 of 139 - inspection-ai\n","32 of 139 - wrkspot-panic\n","33 of 139 - wrkspot-support\n","34 of 139 - lms-backend\n","35 of 139 - electronic-sign\n","36 of 139 - wrkspot-translation\n","37 of 139 - devops-utility\n","38 of 139 - housekeeping-v2\n","39 of 139 - iot-webservice\n","40 of 139 - global-search\n","41 of 139 - wrkspot-api\n","42 of 139 - dashboard-v3\n","43 of 139 - calendar-services\n","44 of 139 - user-persona\n","45 of 139 - payment-gateway\n","46 of 139 - security-v2\n","47 of 139 - task-scheduler\n","48 of 139 - app-config\n","49 of 139 - analytics\n","50 of 139 - timesheet-v3\n","51 of 139 - report-gateway\n","52 of 139 - document-management\n","53 of 139 - iot-location-processor-v2\n","54 of 139 - iot-location-sink-v2\n","55 of 139 - wrkspot-dashboard\n","56 of 139 - iot-diagnostics-sink\n","57 of 139 - iot-health-service\n","58 of 139 - licensing-v2\n","59 of 139 - task-management\n","60 of 139 - mobile-rn\n","61 of 139 - accrual-v2\n","62 of 139 - panic-session-processor\n","63 of 139 - wrkspot-settings-v2\n","64 of 139 - ts-summary\n","65 of 139 - onboarding-readiness\n","66 of 139 - employee-onboarding\n","67 of 139 - wrkspot-chatbot\n","68 of 139 - wrkspot-actors\n","69 of 139 - wrkspot-storybook\n","70 of 139 - payroll-summary\n","71 of 139 - workflow-service\n","72 of 139 - etl-pipeline\n","73 of 139 - projects-and-tasks\n","74 of 139 - pms-msi-integration\n","75 of 139 - pms-integration\n","76 of 139 - budgetandforecast\n","77 of 139 - employee-onboarding-checklist\n","78 of 139 - employee-management-v4\n","79 of 139 - pms-scheduler\n","80 of 139 - pms-choice-integration\n","81 of 139 - neo4j-integration\n","82 of 139 - scheduler-v4\n","83 of 139 - pms-code-integration\n","84 of 139 - performance-management\n","85 of 139 - housekeeping-integration\n","86 of 139 - pms-opera-service\n","87 of 139 - pms-msi-service\n","88 of 139 - pms-synexis-service\n","89 of 139 - pms-choice-service\n","90 of 139 - etl-workorder\n","91 of 139 - task-aggregator\n","92 of 139 - workorder-neo4j-migration\n","93 of 139 - analytics-api-v2\n","94 of 139 - analytics-timesheet-v2\n","95 of 139 - dars-transaction\n","96 of 139 - dars-transaction-audit\n","97 of 139 - pms-api-integration\n","98 of 139 - analytics-workorder\n","99 of 139 - job-scheduler\n","100 of 139 - analytics-housekeeping\n","101 of 139 - analytics-jsreport\n","102 of 139 - benefits-management\n","103 of 139 - locust-scripts\n","104 of 139 - preventative-maintenance\n","105 of 139 - accrual-reset\n","106 of 139 - wrkspot-hotelkey-integration\n","107 of 139 - dars-timecard-pipeline\n","108 of 139 - wrkspot-internal-metrics\n","109 of 139 - dars-timecard-status\n","110 of 139 - employee-payrate-sync\n","111 of 139 - dars-timecard-status-api\n","112 of 139 - ts-audit-report\n","113 of 139 - wrkspot-csr\n","114 of 139 - dars-timecard-corp-override\n","115 of 139 - dars-timecard-corp-override-api\n","116 of 139 - dars-timecard-override\n","117 of 139 - dars-timecard-override-api\n","118 of 139 - sync-writer\n","119 of 139 - accrual-v3\n","120 of 139 - site_envers_spike\n","121 of 139 - clock-health-dashboard\n","122 of 139 - clock-health-dashboard-api\n","123 of 139 - choice-inbound-adapter\n","124 of 139 - menu-prototype\n","125 of 139 - choice-api\n","126 of 139 - web-dashboard-prototype\n","127 of 139 - dars-employee\n","128 of 139 - dars-employee-attrition\n","129 of 139 - dars-employee-api\n","130 of 139 - wrkspot-todo\n","131 of 139 - web-components\n","132 of 139 - payroll-reconciliation\n","133 of 139 - db-queries\n","134 of 139 - wrkspot-framework\n","135 of 139 - dars-housekeeping\n","136 of 139 - dars-housekeeping-api\n","137 of 139 - housekeeping-v3\n","138 of 139 - housekeeping-allocation\n","139 of 139 - housekeeping-allocation-ai\n"]}]},{"cell_type":"code","metadata":{"id":"QAsqK2KGKS4x","executionInfo":{"status":"ok","timestamp":1670740154378,"user_tz":-330,"elapsed":5,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}}},"source":["commits_df.to_csv(\"commits.csv\")"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"dFB54QfwKS41","colab":{"base_uri":"https://localhost:8080/","height":428},"outputId":"a9711886-7923-4927-eb63-49be0d47a31f","executionInfo":{"status":"ok","timestamp":1670740154379,"user_tz":-330,"elapsed":6,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}}},"source":["import re\n","commits_df['email'] = commits_df['name'].apply(lambda x: re.search('\\<(.*)\\>', x).group(1))\n","unique_emails = sorted(commits_df.email.unique())\n","display(unique_emails)"],"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["['aashima.sharma@wrkspot.com',\n"," 'alsudanimohammed1@gmail.com',\n"," 'dinesh.somasundaram@wrkspot.com',\n"," 'erik.evert@wrkspot.com',\n"," 'han.jinghe@wrkspot.com',\n"," 'jinghe.han@wrkspot.com',\n"," 'mikita.markin@wrkspot.com',\n"," 'milan.kamilya@wrkspot.com',\n"," 'mohammed.alsudani@wrkspot.com',\n"," 'nitish@wrkspot.com',\n"," 'pragya.singh@wrkspot.com',\n"," 'priya.prakash@wrkspot.com',\n"," 'raghu.mallesha@wrkspot.com',\n"," 'raghum@Admins-MacBook-Pro.local',\n"," 'risin.bai@wrkspot.com',\n"," 'sathish.kumar@wrkspot.com',\n"," 'sethu.palaniyappan@wrkspot.com',\n"," 'sourav.saha@wrkspot.com',\n"," 'surendrakumar_n@wrkspot.com',\n"," 'venkit.iyer@wrkspot.com',\n"," 'vigneshwaran@wrkspot.com',\n"," 'zhang.mingjin@wrkspot.com',\n"," 'zhang.yao@wrkspot.com']"]},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"RAk7RySDKS44","executionInfo":{"status":"ok","timestamp":1670740154380,"user_tz":-330,"elapsed":6,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}}},"source":["def plot_commits_for_user(filter_name=None, filter_repo=None, target_commit=2):\n","    if filter_name:\n","        output_df = commits_df[commits_df['email'] == filter_name]  \n","    else:\n","        output_df = commits_df\n","    if filter_repo:\n","        output_df = output_df[commits_df['repo'] == filter_repo]  \n","    output_df = output_df.groupby([output_df['day']])['day'].count()\n","    idx = pd.date_range(startDateStr, endDateStr)\n","    output_df = output_df.reindex(idx, fill_value=0)\n","    sns.set_style(\"whitegrid\")\n","    plt.figure(figsize=(15,2))\n","    plt.title(\"Commit History for %s\" % ('All Users' if not filter_name else filter_name))\n","    plt.axhline(target_commit, color=\"red\")\n","    ax = sns.barplot(output_df.index, output_df.values)\n","    ax.set_xticklabels([pandas_datetime.strftime(\"%b-%d\") for pandas_datetime in output_df.index], rotation=90)\n","    plt.show()"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"X53Mg_BEKS48","colab":{"base_uri":"https://localhost:8080/","height":424},"outputId":"9aca52bc-4d4b-4c9e-8e86-bc4558e1e466","executionInfo":{"status":"ok","timestamp":1670740154380,"user_tz":-330,"elapsed":6,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}}},"source":["commits_df"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                    name  \\\n","0             sathishkumar.m <sathish.kumar@wrkspot.com>   \n","1      Dinesh Somasundaram <dinesh.somasundaram@wrksp...   \n","2             sathishkumar.m <sathish.kumar@wrkspot.com>   \n","3             sathishkumar.m <sathish.kumar@wrkspot.com>   \n","4            Raghu Mallesha <raghu.mallesha@wrkspot.com>   \n","...                                                  ...   \n","10197  sethu palaniyappan <sethu.palaniyappan@wrkspot...   \n","10198  sethu palaniyappan <sethu.palaniyappan@wrkspot...   \n","10199  sethu palaniyappan <sethu.palaniyappan@wrkspot...   \n","10273              Saurav Saha <sourav.saha@wrkspot.com>   \n","10274  Dinesh Somasundaram <dinesh.somasundaram@wrksp...   \n","\n","                           date                        repo         day  \\\n","0     2022-12-08 10:52:02+00:00          virtual-deployment  2022-12-08   \n","1     2022-12-07 04:55:20+00:00          virtual-deployment  2022-12-07   \n","2     2022-12-06 15:45:16+00:00          virtual-deployment  2022-12-06   \n","3     2022-12-06 15:44:33+00:00          virtual-deployment  2022-12-06   \n","4     2022-12-06 12:47:39+00:00          virtual-deployment  2022-12-06   \n","...                         ...                         ...         ...   \n","10197 2022-11-30 19:39:39+00:00     housekeeping-allocation  2022-11-30   \n","10198 2022-11-30 19:06:59+00:00     housekeeping-allocation  2022-11-30   \n","10199 2022-11-30 19:05:21+00:00     housekeeping-allocation  2022-11-30   \n","10273 2022-12-08 21:01:31+00:00  housekeeping-allocation-ai  2022-12-08   \n","10274 2022-12-05 11:35:05+00:00  housekeeping-allocation-ai  2022-12-05   \n","\n","                                 email  \n","0            sathish.kumar@wrkspot.com  \n","1      dinesh.somasundaram@wrkspot.com  \n","2            sathish.kumar@wrkspot.com  \n","3            sathish.kumar@wrkspot.com  \n","4           raghu.mallesha@wrkspot.com  \n","...                                ...  \n","10197   sethu.palaniyappan@wrkspot.com  \n","10198   sethu.palaniyappan@wrkspot.com  \n","10199   sethu.palaniyappan@wrkspot.com  \n","10273          sourav.saha@wrkspot.com  \n","10274  dinesh.somasundaram@wrkspot.com  \n","\n","[1151 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-7084248f-6171-4ebb-a17d-9022329d2410\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>date</th>\n","      <th>repo</th>\n","      <th>day</th>\n","      <th>email</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>sathishkumar.m &lt;sathish.kumar@wrkspot.com&gt;</td>\n","      <td>2022-12-08 10:52:02+00:00</td>\n","      <td>virtual-deployment</td>\n","      <td>2022-12-08</td>\n","      <td>sathish.kumar@wrkspot.com</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Dinesh Somasundaram &lt;dinesh.somasundaram@wrksp...</td>\n","      <td>2022-12-07 04:55:20+00:00</td>\n","      <td>virtual-deployment</td>\n","      <td>2022-12-07</td>\n","      <td>dinesh.somasundaram@wrkspot.com</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>sathishkumar.m &lt;sathish.kumar@wrkspot.com&gt;</td>\n","      <td>2022-12-06 15:45:16+00:00</td>\n","      <td>virtual-deployment</td>\n","      <td>2022-12-06</td>\n","      <td>sathish.kumar@wrkspot.com</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sathishkumar.m &lt;sathish.kumar@wrkspot.com&gt;</td>\n","      <td>2022-12-06 15:44:33+00:00</td>\n","      <td>virtual-deployment</td>\n","      <td>2022-12-06</td>\n","      <td>sathish.kumar@wrkspot.com</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Raghu Mallesha &lt;raghu.mallesha@wrkspot.com&gt;</td>\n","      <td>2022-12-06 12:47:39+00:00</td>\n","      <td>virtual-deployment</td>\n","      <td>2022-12-06</td>\n","      <td>raghu.mallesha@wrkspot.com</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10197</th>\n","      <td>sethu palaniyappan &lt;sethu.palaniyappan@wrkspot...</td>\n","      <td>2022-11-30 19:39:39+00:00</td>\n","      <td>housekeeping-allocation</td>\n","      <td>2022-11-30</td>\n","      <td>sethu.palaniyappan@wrkspot.com</td>\n","    </tr>\n","    <tr>\n","      <th>10198</th>\n","      <td>sethu palaniyappan &lt;sethu.palaniyappan@wrkspot...</td>\n","      <td>2022-11-30 19:06:59+00:00</td>\n","      <td>housekeeping-allocation</td>\n","      <td>2022-11-30</td>\n","      <td>sethu.palaniyappan@wrkspot.com</td>\n","    </tr>\n","    <tr>\n","      <th>10199</th>\n","      <td>sethu palaniyappan &lt;sethu.palaniyappan@wrkspot...</td>\n","      <td>2022-11-30 19:05:21+00:00</td>\n","      <td>housekeeping-allocation</td>\n","      <td>2022-11-30</td>\n","      <td>sethu.palaniyappan@wrkspot.com</td>\n","    </tr>\n","    <tr>\n","      <th>10273</th>\n","      <td>Saurav Saha &lt;sourav.saha@wrkspot.com&gt;</td>\n","      <td>2022-12-08 21:01:31+00:00</td>\n","      <td>housekeeping-allocation-ai</td>\n","      <td>2022-12-08</td>\n","      <td>sourav.saha@wrkspot.com</td>\n","    </tr>\n","    <tr>\n","      <th>10274</th>\n","      <td>Dinesh Somasundaram &lt;dinesh.somasundaram@wrksp...</td>\n","      <td>2022-12-05 11:35:05+00:00</td>\n","      <td>housekeeping-allocation-ai</td>\n","      <td>2022-12-05</td>\n","      <td>dinesh.somasundaram@wrkspot.com</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1151 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7084248f-6171-4ebb-a17d-9022329d2410')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7084248f-6171-4ebb-a17d-9022329d2410 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7084248f-6171-4ebb-a17d-9022329d2410');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"4BYFg38gKS5A"},"source":["### Aggregated Commit Stats"]},{"cell_type":"code","metadata":{"id":"DLxin1VnKS5A","colab":{"base_uri":"https://localhost:8080/","height":269},"outputId":"8983cee9-cdb8-4caa-f02e-2e673fd4f10a","executionInfo":{"status":"ok","timestamp":1670740154381,"user_tz":-330,"elapsed":6,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}}},"source":["no_of_devs = 26\n","no_of_days = (endDate - startDate).days + 1\n","total_commits = commits_df.shape[0]\n","avg_commits_per_day = total_commits / no_of_days\n","avg_commits_per_dev_per_day = total_commits / no_of_devs / no_of_days\n","display(pd.DataFrame([\n","    {'item' : 'Start Date', 'value' : str(startDateStr)},\n","    {'item' : 'End Date', 'value' : str(endDateStr)},\n","    {'item' : 'No. of Devs', 'value' : str(no_of_devs)},\n","    {'item' : 'No. of Days', 'value' : str(no_of_days)},\n","    {'item' : 'Total Commits', 'value' : str(total_commits)},\n","    {'item' : 'Avg. Commits Per Day', 'value' : str(round(avg_commits_per_day, 2))},\n","    {'item' : 'Avg. Commits Per Dev Per Day', 'value' : str(round(avg_commits_per_dev_per_day, 2))}\n","                     ]))"],"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["                           item       value\n","0                    Start Date  2022-12-01\n","1                      End Date  2022-12-10\n","2                   No. of Devs          26\n","3                   No. of Days          10\n","4                 Total Commits        1151\n","5          Avg. Commits Per Day       115.1\n","6  Avg. Commits Per Dev Per Day        4.43"],"text/html":["\n","  <div id=\"df-b41658d0-d4e1-411d-9b84-7d9815fd77ce\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>item</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Start Date</td>\n","      <td>2022-12-01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>End Date</td>\n","      <td>2022-12-10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>No. of Devs</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>No. of Days</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Total Commits</td>\n","      <td>1151</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Avg. Commits Per Day</td>\n","      <td>115.1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Avg. Commits Per Dev Per Day</td>\n","      <td>4.43</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b41658d0-d4e1-411d-9b84-7d9815fd77ce')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b41658d0-d4e1-411d-9b84-7d9815fd77ce button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b41658d0-d4e1-411d-9b84-7d9815fd77ce');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"tJrtrJyGKS5D"},"source":["### Commits For Each User"]},{"cell_type":"code","metadata":{"id":"uZPCrcqJKS5E","executionInfo":{"status":"ok","timestamp":1670740154381,"user_tz":-330,"elapsed":5,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}},"colab":{"base_uri":"https://localhost:8080/","height":771},"outputId":"a6cc5481-787e-4eaa-9db9-a6bac1aa541f"},"source":["commits_by_user = commits_df.groupby([commits_df['email']], as_index=False).count()[['email', 'day']]\n","commits_by_user = commits_by_user.rename(columns={'day' : 'count'})\n","commits_by_user.sort_values(by=['count'], ascending=False)\n","\n"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                              email  count\n","15        sathish.kumar@wrkspot.com    364\n","22            zhang.yao@wrkspot.com    115\n","2   dinesh.somasundaram@wrkspot.com     89\n","21        zhang.mingjin@wrkspot.com     73\n","3            erik.evert@wrkspot.com     70\n","19          venkit.iyer@wrkspot.com     57\n","9                nitish@wrkspot.com     55\n","20         vigneshwaran@wrkspot.com     52\n","13  raghum@Admins-MacBook-Pro.local     49\n","7         milan.kamilya@wrkspot.com     41\n","1       alsudanimohammed1@gmail.com     37\n","16   sethu.palaniyappan@wrkspot.com     33\n","14            risin.bai@wrkspot.com     30\n","4            han.jinghe@wrkspot.com     17\n","10         pragya.singh@wrkspot.com     16\n","0        aashima.sharma@wrkspot.com     13\n","6         mikita.markin@wrkspot.com     11\n","17          sourav.saha@wrkspot.com      8\n","11        priya.prakash@wrkspot.com      7\n","12       raghu.mallesha@wrkspot.com      5\n","18      surendrakumar_n@wrkspot.com      3\n","8     mohammed.alsudani@wrkspot.com      3\n","5            jinghe.han@wrkspot.com      3"],"text/html":["\n","  <div id=\"df-2b32b7aa-113a-413a-a3f0-9d13f7d7ea7a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>email</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>15</th>\n","      <td>sathish.kumar@wrkspot.com</td>\n","      <td>364</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>zhang.yao@wrkspot.com</td>\n","      <td>115</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>dinesh.somasundaram@wrkspot.com</td>\n","      <td>89</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>zhang.mingjin@wrkspot.com</td>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>erik.evert@wrkspot.com</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>venkit.iyer@wrkspot.com</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>nitish@wrkspot.com</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>vigneshwaran@wrkspot.com</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>raghum@Admins-MacBook-Pro.local</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>milan.kamilya@wrkspot.com</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>alsudanimohammed1@gmail.com</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>sethu.palaniyappan@wrkspot.com</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>risin.bai@wrkspot.com</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>han.jinghe@wrkspot.com</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>pragya.singh@wrkspot.com</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>aashima.sharma@wrkspot.com</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>mikita.markin@wrkspot.com</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>sourav.saha@wrkspot.com</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>priya.prakash@wrkspot.com</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>raghu.mallesha@wrkspot.com</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>surendrakumar_n@wrkspot.com</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>mohammed.alsudani@wrkspot.com</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>jinghe.han@wrkspot.com</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b32b7aa-113a-413a-a3f0-9d13f7d7ea7a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2b32b7aa-113a-413a-a3f0-9d13f7d7ea7a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2b32b7aa-113a-413a-a3f0-9d13f7d7ea7a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"nbBOudSVKS5H"},"source":["### Graph of Commits for Each User\n","\n","> Indented block\n","\n"]},{"cell_type":"code","metadata":{"id":"Qz4n4r8AKS5I","executionInfo":{"status":"ok","timestamp":1670740407247,"user_tz":-330,"elapsed":1607,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"f1fb7ec4-d07b-4d24-ac17-caf2cf9dac5e"},"source":["#plot_commits_for_user(\"Han Jinghe\")\n","#plot_commits_for_user(\"Vickey\")\n","\n","filtered_emails = [ \n"," 'priya.prakash@wrkspot.com',\n"," 'meenal.verma@wrkspot.com',\n"," 'zhang.yao@wrkspot.com',\n"," 'zhang.mingjin@wrkspot.com','raghu.mallesha@wrkspot.com','raghum@Admins-MacBook-Pro.local']\n","\n","# for email in unique_emails:\n","#   plot_commits_for_user(email)\n","\n","\n","for email in filtered_emails:\n","  plot_commits_for_user(email)\n","\n"],"execution_count":36,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x144 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x144 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x144 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x144 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x144 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x144 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["  display(filtered_emails)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":124},"id":"2u2mcONK4k8K","executionInfo":{"status":"ok","timestamp":1670740376850,"user_tz":-330,"elapsed":605,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}},"outputId":"adcb52c2-2ff0-48a0-f5e5-6faff3b664d3"},"execution_count":35,"outputs":[{"output_type":"display_data","data":{"text/plain":["['priya.prakash@wrkspot.com',\n"," 'meenal.verma@wrkspot.com',\n"," 'zhang.yao@wrkspot.com',\n"," 'zhang.mingjin@wrkspot.com',\n"," 'raghu.mallesha@wrkspot.com',\n"," 'raghum@Admins-MacBook-Pro.local']"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"RfDugWtzKS5L"},"source":["### Graph for a specific repo (or set of repos)\n","\n","> Indented block\n","\n"]},{"cell_type":"code","metadata":{"id":"EgaWihrUKS5M","executionInfo":{"status":"ok","timestamp":1670740156456,"user_tz":-330,"elapsed":4,"user":{"displayName":"sathish kumar","userId":"16529419608254356160"}},"colab":{"base_uri":"https://localhost:8080/","height":254},"outputId":"d5984355-2980-4ec9-d779-78185e3c2633"},"source":["plot_commits_for_user(filter_repo=\"wrkspot-iot\", target_commit=12)"],"execution_count":23,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x144 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}